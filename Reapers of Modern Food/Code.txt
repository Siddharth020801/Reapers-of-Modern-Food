#define SensorPin A5           //pH meter Analog output to Arduino Analog pin5
#define Offset 0.00            //deviation compensate
#define samplingInterval 20
#define printInterval 800
#define ArrayLenth  40    //times of collection
int pHArray[ArrayLenth];   //Store the average value of the sensor feedback
int pHArrayIndex = 0;
static float pHValue;
static float voltage;

//*********************************************************************************************

int sensorPin = 0; //the temperature pin to analog pin

void setup()
{
  Serial.begin(9600);
  Serial.begin(9600);
}

void loop() 
{
int reading = analogRead(sensorPin);       //Code for Temperature Probe

float voltage = reading * 5.0;              //Converting that reading to Voltage
voltage /= 1024.0;
Serial.print(voltage);                
Serial.println("Volts");                   //Printing Voltage value

float temperatureC = (voltage - 1.05) *  100;      //Converting reading to degrees in C
Serial.print(temperatureC);
Serial.println("degrees C");                      //Printing degrees(C) value

float temperatureF= (temperatureC * 9.0/5.0) + 32.0;        //Converting reading to degrees in F
Serial.print(temperatureF);
Serial.println("degrees F");                                //Printing degrees(F) value

delay(1000); 

//************************************************************************************************
  static unsigned long samplingTime = millis();         //Code for pH sensor

  static unsigned long printTime = millis();
 
  if (millis() - samplingTime > samplingInterval)
  {

    pHArray[pHArrayIndex++] = analogRead(SensorPin);

    if (pHArrayIndex == ArrayLenth)pHArrayIndex = 0;

    voltage = avergearray(pHArray, ArrayLenth) * 5.0 / 1024;

    pHValue = 3.5 * voltage + Offset;

    samplingTime = millis();

  }

  if (millis() - printTime > printInterval) //Every 800 milliseconds, print a numerical, convert the state of the LED indicator
  {   
    Serial.print(" pHValue: ");

    Serial.println(pHValue, 2);

    printTime = millis();

  }

}

double avergearray(int* arr, int number)
{
  int i;

  int max, min;

  double avg;

  long amount = 0;

  if (number <= 0) 
  {
    Serial.println("Error number for the array to avraging!/n");

    return 0;
  }

  if (number < 5) //less than 5, calculated directly statistics
  { 
    for (i = 0; i < number; i++) 
    {
      amount += arr[i];
    }

    avg = amount / number;

    return avg;

  } 
  else
  {
    if (arr[0] < arr[1]) 
    {
      min = arr[0]; max = arr[1];
    }
    else 
    {
      min = arr[1]; max = arr[0];
    }

    for (i = 2; i < number; i++) 
    {
      if (arr[i] < min) 
      {

        amount += min;      //arr<min

        min = arr[i];
      }
      else
      {
        if (arr[i] > max)
        {
          amount += max;  //arr>max

          max = arr[i];
        } 
        else
        {
          amount += arr[i]; //min<=arr<=max
        }

      }//if

    }//for
     
    avg = (double)amount / (number - 2);
  }//if
  
  return avg;
}



/*************************************************************************************************/

#define SensorPin A1 
float sensorValue = 0; 
void setup()
{ 
  pinMode(A0, INPUT);                                                        //Gas Sensing
  pinMode(10, OUTPUT);

  Serial.begin(9600); // sets the serial port to 9600
  Serial.println("Gas sensor warming up!\n");
  delay(2000); // allow the MQ-6 to warm up
 Serial.begin(9600); 
} 
void loop() 
{ 
  float sensorValue;  //variable to store sensor value
 
  sensorValue = analogRead(A0); // read analog input pin 0  
  Serial.print("Sensor Value: ");
  Serial.print(sensorValue);
  
  if(sensorValue<100)           //If the gas sensor reads the data, & finds that the gas is atmost 100 units far, then it's gonna tell the authorized person using the message printed & with the tone of the buzzer.
  {
    Serial.print(" | Smoke detected!");
    tone(10, 262, 100);
  }
  
  delay(10);

 for (int i = 0; i <= 100; i++) 
 { 
   sensorValue = sensorValue + analogRead(SensorPin); 
   delay(10); 
 } 
 sensorValue = sensorValue/100.0; 
 Serial.print("\nMoisture Content = ");
 Serial.println(sensorValue); 
 delay(300); 
 
} 